package plantsvszombies;

import edu.macalester.graphics.*;
import plant.*;

import java.util.Random;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.ScheduledFuture;
import java.util.concurrent.TimeUnit;
import java.util.List;
import java.util.ArrayList;

import javax.swing.JOptionPane;

import zombies.ZombieManager;

/**
 * The game of Plants. vs Zombies, programmed in Java.
 * 
 * Authors: Bryant Juarez, Luna Muñoz-Maldonado, William Acosta
 * Macalester College, COMP 127, Prof. Amin G. Alhashim, PhD, 6σ
 */
public class PvZ {
    public static final int CANVAS_WIDTH = 320;
    public static final int CANVAS_HEIGHT = 240;

    private static CanvasWindow canvas = new CanvasWindow("Plants vs. Zombies: Java Edition", CANVAS_WIDTH, CANVAS_HEIGHT);;

    public static long frame = 0;

    // Game elements
    private UI ui = new UI(canvas);
    private ZombieManager zombieManager;
    private Lawn lawn;
    private Image background = new Image("game/LAWN.png");
    private PlantManager plantManager;

    public static List<Image> sunflowerSuns;
    public Image gameSun;


    // Player Statistics
    private static String playerName;
    public static int sunCount = 500;
    private static int zombiesKilled = 0;
    private final short maxSun = 9999;
    Random random = new Random();
    
    // ScheduledExecutorService executor = Executors.newScheduledThreadPool(1);

    public PvZ() {
        canvas.add(background);
        lawn = new Lawn(canvas);
        gameSun = null; // No suns when constructed
        zombieManager = new ZombieManager(canvas);
        plantManager = new PlantManager(canvas);
        sunflowerSuns = new ArrayList<Image>();
        canvas.add(ui);


        // Gets called every millisecond
        canvas.animate(runnable -> {
            frame++;

            // Tasks to run every 7 frames
            if ((frame % 7) == 0) {
                plantManager.moveProjectiles();
            }

            // Tasks to run every 60 frames
            if ((frame % 60) == 0) {
                if (gameSun != null) gameSun.moveBy(0, 1);
            }

            // Tasks to run every 1.5 seconds
            if ((frame % 90) == 0) {
                plantManager.shootPeas();
            }

            // Tasks to run every 24 seconds
            if ((frame % 1440) == 0) {
                plantManager.produceSunflowerSuns();
            }

            // Tasks to run every 12.5 seconds
            if ((frame % 750) == 0) {
                spawnSun();
            }



            zombieManager.runScheduledTasks();
            // spawnSun();
            // sun.runScheduledTasks();
        });

        /*
         * Determines what element is under the mouse when a click
         * occurs, and runs that element's task for clicks accordingly.
         */
        canvas.onClick(handler -> {
            GraphicsObject clickedObject = canvas.getElementAt(handler.getPosition());
            Image sunImage = new Image("game/SUN.png");
            
            // Check if the clicked object is a sun produced by a sunflower
            if (sunflowerSuns.contains(clickedObject)) {
                canvas.remove(clickedObject);
                sunCount += 25;
                // // Only one sun generated by the game can be on the canvas
                // ui.update();
            }

            if (clickedObject.equals(gameSun)) {
                canvas.remove(clickedObject);
                sunCount += 25;
                gameSun = null;
            }

            
            if (UI.objInMotion == false) {
                if (clickedObject.equals(UI.shovelSprite) || UI.seedPackets.contains(clickedObject)) {
                    UI.followMouse(clickedObject, true);
                }
            } else {
                UI.centerButtons();
                UI.objInMotion = false;

                Point plantPoint = Lawn.getPlantPoint(handler.getPosition());
                if (plantPoint != null) { // Out of bounds check
                    if (clickedObject.equals(UI.sunflowerPacket)) {
                        plantManager.addPlant(0, plantPoint);
                    } else if (clickedObject.equals(UI.peashooterPacket)) {
                        plantManager.addPlant(1, plantPoint);
                    } else if (clickedObject.equals(UI.wallnutPacket)) {
                        plantManager.addPlant(2, plantPoint);
                    } else if (clickedObject.equals(UI.potatoMinePacket)) {
                        plantManager.addPlant(3, plantPoint);
                    } else if (clickedObject.equals(UI.cherryBombPacket)) {
                        plantManager.addPlant(4, plantPoint);
                    }
                }
            }
            ui.update();
        });
    }

    public static void main(String[] args) {
        playerName = JOptionPane.showInputDialog("What is your name?");
        PvZ plantsVsZombies = new PvZ();
    }

    /**
     * Returns the elapsed program time, in seconds.
     * @return
     */
    public static long getFrame() {
        return frame;
    }

    /**
     * Gets the player's name.
     * @return
     */
    public static String getPlayerName() {
        return playerName;
    }

    /**
     * If all conditions are right, spawns a sun.
     */
    private void spawnSun() {
        // Check if there is not a sun generated by the game on the canvas.
        if (gameSun == null) {
            Point point = new Point(random.nextInt((PvZ.CANVAS_WIDTH - 0) + 1), -10);
            gameSun = new Image("game/SUN.png");
            gameSun.setPosition(point);
            canvas.add(gameSun);
        }
    }
}

